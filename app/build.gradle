apply plugin: 'com.google.firebase.crashlytics'

android {
  defaultConfig {
    applicationId Build.appId
    buildToolsVersion Build.buildToolsVersion
    minSdkVersion Build.minSdkVersion
    targetSdkVersion Build.targetSdkVersion
    compileSdkVersion Build.compileSdkVersion
    versionCode 100
    versionName "3.0.0"
    vectorDrawables.useSupportLibrary = true
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    manifestPlaceholders = [appName: "@string/app_name"]
  }
  buildTypes {
    release {
      minifyEnabled true
      shrinkResources true
      multiDexEnabled true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
    debug {
      manifestPlaceholders = [appName: "Biedra - Debug"]
      debuggable true
      multiDexEnabled true
      minifyEnabled false
      firebaseCrashlytics {
        mappingFileUploadEnabled false
      }

      ext.alwaysUpdateBuildId = false
    }
  }
  flavorDimensions "stage"
  productFlavors {
    dev {
      dimension "stage"
      versionNameSuffix "-dev" // e.g 1.0-dev
//      applicationIdSuffix '.dev'
//      resConfigs("de", "xxhdpi")
    }
    prod {
      dimension "stage"
    }
  }
  variantFilter { variant ->
    // 'dev' flavor is only available for debug build
    if (variant.buildType.name != 'debug' && variant.getFlavors().get(0).name == "dev") {
      variant.setIgnore(true)
    }
    // 'prod' flavor is only available for release build
    if (!(variant.buildType.name == 'release') && variant.getFlavors().get(0).name == "prod") {
      variant.setIgnore(true)
    }
  }
  kotlinOptions {
    jvmTarget = '1.8'
  }
}

dependencies {
  implementation fileTree(include: ['*.jar'], dir: 'libs')
  implementation project(path: ':domain')

  implementation External.kotlin
  //  Logging
  implementation External.timber
  //  DI
  implementation External.koin
  // Koin AndroidX Scope features
  implementation "org.koin:koin-androidx-scope:$Versions.koin"
  // Koin AndroidX ViewModel features
  implementation "org.koin:koin-androidx-viewmodel:$Versions.koin"
  // Koin AndroidX Fragment features
  implementation "org.koin:koin-androidx-fragment:$Versions.koin"
  // Koin AndroidX WorkManager
  implementation "org.koin:koin-androidx-workmanager:$Versions.koin"
  // Koin AndroidX Jetpack Compose
  implementation "org.koin:koin-androidx-compose:$Versions.koin"
  implementation 'androidx.cardview:cardview:1.0.0'
  testImplementation "org.koin:koin-test:${Versions.koin}"

  implementation 'androidx.constraintlayout:constraintlayout:2.0.2'
  implementation 'androidx.recyclerview:recyclerview:1.1.0'
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  implementation 'androidx.appcompat:appcompat:1.2.0'
  implementation 'com.google.android.material:material:1.2.1'
  implementation 'androidx.navigation:navigation-fragment:2.3.1'
  implementation 'androidx.navigation:navigation-ui:2.3.1'
  implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'
  implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
  implementation 'androidx.navigation:navigation-fragment-ktx:2.3.1'
  implementation 'androidx.navigation:navigation-ui-ktx:2.3.1'

  implementation Room.runtime
  kapt Room.compiler
  implementation Room.ktx
  testImplementation Room.testing

  implementation Google.maps
  implementation Google.location
  implementation External.dexter
  implementation External.ktorAndroid
  implementation External.ktorOkHttp
  implementation External.ktorSerialization
  implementation External.okHttp
  implementation External.coroutines
  implementation External.firebaseCore
  implementation External.crashlytics
  debugImplementation External.leakcanaryDebug
  releaseImplementation External.leakcanaryRelease
  implementation External.jodaTime
  //  Testing
  testImplementation TestDeps.junit
  androidTestImplementation TestDeps.runner
  androidTestImplementation TestDeps.espresso

  implementation 'com.github.sundeepk:compact-calendar-view:3.0.0'
}

apply plugin: 'com.google.gms.google-services'
apply from: '../DokkaConfig.gradle'