apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'


android {
  compileSdkVersion Build.compileSdkVersion

  defaultConfig {

    buildToolsVersion Build.buildToolsVersion
    minSdkVersion Build.minSdkVersion
    targetSdkVersion Build.targetSdkVersion
    compileSdkVersion Build.compileSdkVersion
    versionCode 1
    versionName "2.0"

    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
}


// recommend to specify the flavor once and dynamically adapt paths to it
def flavor = "dev"
// flavor we want to have tested. Should be static
def Flavor = "Dev"
// flavor again, but starting with upper case

// noinspection is used to remove some "warnings" from Android Studio
sonarqube {
  //noinspection GroovyAssignabilityCheck
  properties {
    /* SonarQube needs to be informed about your libraries and the android.jar to understand that methods like
     * onResume() is called by the Android framework. Without that information SonarQube will very likely create warnings
     * that those methods are never used and they should be removed. Same applies for libraries where parent classes
     * are required to understand how a class works and is used. */
    def libraries = project.android.sdkDirectory.getPath() + "/platforms/android-22/android.jar," +
        "build/intermediates/exploded-aar/**/classes.jar"

    property "sonar.host.url", "http://localhost:9000"
    property "sonar.projectKey", "Domain" // some shortcut name
    property "sonar.projectName", "Domain"
    property "sonar.projectVersion", "2.0"

    property "sonar.sourceEncoding", "UTF-8"
    property "sonar.sources", "src/main/java,src/main/res"
    // first defines where the java files are, the second where the xml files are
    property "sonar.binaries", "build/intermediates/classes/${flavor}/debug"
    property "sonar.libraries", libraries
    property "sonar.java.binaries", "build/intermediates/classes/${flavor}/debug"
    property "sonar.java.libraries", libraries

    property "sonar.tests", "src/test/java" // where the tests are located
    property "sonar.java.test.binaries", "build/intermediates/classes/${flavor}/debug"
    property "sonar.java.test.libraries", libraries

    property "sonar.scm.provider", "git"

    property "sonar.jacoco.reportPath", "build/jacoco/test${Flavor}DebugUnitTest.exec"
    // path to coverage reports
    property "sonar.java.coveragePlugin", "jacoco"
    property "sonar.junit.reportsPath", "build/test-results/${flavor}DebugUnitTest"
    // path to junit reports
    property "sonar.android.lint.report", "build/outputs/lint-results-${flavor}Debug.xml"
    // path to lint reports
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  implementation External.kotlin
}
